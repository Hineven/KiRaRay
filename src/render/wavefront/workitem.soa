flat int;
flat uint;
flat float;
flat BSDFType;
flat bool;
flat double;

flat Light;
flat Medium;
flat PhaseFunction;
flat MaterialType;
flat LCGSampler;
flat PCGSampler;
flat HaltonSampler;

flat Vector2f;
flat Vector3f;
flat Color;

struct LightSampleContext{ Vector3f p, n; };

struct Ray{ 
	Vector3f origin;
	Vector3f dir; 
	float time;
	Medium medium;
};

struct PixelState {
	Color L;
	PCGSampler sampler;
};

struct BSDFData {
	float IoR;
	Color diffuse;	
	Color specular;
	float specularTransmission;
	float roughness;
	float metallic;
	float anisotropic;
	MaterialType bsdfType;
};

struct SurfaceInteraction {
	Vector3f p;
	Vector3f wo;
	Vector3f n;
	Vector2f uv;
	Vector3f tangent;
	Vector3f bitangent;
	Light light;
	BSDFData sd;
};

struct RayWorkItem {
	Ray ray;
	LightSampleContext ctx;
	float pdf;
	Color thp;
	BSDFType bsdfType;
	uint depth;
	uint pixelId;
};

struct MissRayWorkItem {
	Ray ray;
	LightSampleContext ctx;
	float pdf;
	Color thp;
	BSDFType bsdfType;
	uint depth;
	uint pixelId;
};

struct HitLightWorkItem {
	Light light;
	LightSampleContext ctx;
	float pdf;
	Vector3f p;
	Vector3f wo;
	Vector3f n;
	Vector2f uv;
	Color thp;
	BSDFType bsdfType;
	uint depth;
	uint pixelId;
};

struct ShadowRayWorkItem {
	Ray ray;
	float tMax;
	Color Li;
	Color a;
	uint pixelId;
};

struct ScatterRayWorkItem {
	Color thp;
	SurfaceInteraction intr;
	uint depth;
	uint pixelId;
};